{{- if .Values.certificate.selfSigned -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ include "opa-sidecar-admission-controller.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "opa-sidecar-admission-controller.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "opa-sidecar-admission-controller.selectorLabels" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "opa-sidecar-admission-controller.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "opa-sidecar-admission-controller.serviceAccountName" . }}
      initContainers:
        - name: certificate-init-container
          image: "{{ .Values.certificateInitContainerImage.repository }}:{{ .Values.certificateInitContainerImage.tag }}"
          imagePullPolicy: {{ .Values.certificateInitContainerImage.imagePullPolicy }}
          args:
            - "--common-name={{ .Values.certificate.commonName }}"
            - "--organization={{ .Values.certificate.organization }}"
            - "--organizational-unit={{ .Values.certificate.organizationalUnit }}"
            - "--country={{ .Values.certificate.country }}"
            - "--province={{ .Values.certificate.province }}"
            - "--locality={{ .Values.certificate.locality }}"
            - "--street-address={{ .Values.certificate.streetAddress }}"
            - "--postal-code={{ .Values.certificate.postalCode }}"
            - "--ca-duration={{ .Values.certificate.caDuration }}"
            - "--additional-dnsnames={{ .Values.certificate.additionalDNSNames }}"
            - "--service-names={{ .Release.Name }}"
            - "--hostname={{ .Values.certificate.hostname }}"
            - "--subdomain={{ .Values.certificate.subdomain }}"
            - "--cluster-domain={{ .Values.certificate.clusterDomain }}"
            - "--cert-dir=/etc/tls"
            - "--create-secret={{ .Values.certificate.createSecret }}"
            - "--namespace={{ .Release.Namespace }}"
          volumeMounts:
            - name: tls
              mountPath: /etc/tls
        - name: mutatingwebhook-init-container
          image: "{{ .Values.mutatingWebhookInitContainerImage.repository }}:{{ .Values.mutatingWebhookInitContainerImage.tag }}"
          imagePullPolicy: {{ .Values.mutatingWebhookInitContainerImage.imagePullPolicy }}
          args:
            - "--webhook-name={{ .Release.Name }}-webhook.twdps.io"
            - "--object-meta-name={{ .Release.Name }}-webhook"
            - "--service-name={{ .Release.Name }}"
            - "--service-namespace={{ .Release.Namespace }}"
            - "--service-path=/v0/data/istio/inject"
            - "--namespace-selector-key={{ .Values.certificate.namespaceSelectorKey }}"
            - "--namespace-selector-value={{ .Values.certificate.namespaceSelectorValue }}"
            - "--cert-path=/etc/tls/tls.crt"
            - "--key-path=/etc/tls/tls.key"
          volumeMounts:
            - name: tls
              mountPath: /etc/tls
      containers:
        - name: opa
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          args:
            - "run"
            - "--server"
            - "--tls-cert-file=/etc/tls/tls.crt"
            - "--tls-private-key-file=/etc/tls/tls.key"
            - "--addr=0.0.0.0:443"
            - "/policies/inject.rego"
          ports:
            - containerPort: 443
          livenessProbe:
            httpGet:
              path: /health?plugins
              scheme: HTTPS
              port: 443
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health?plugins
              scheme: HTTPS
              port: 443
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: tls
              mountPath: /etc/tls
            - name: inject-policy
              readOnly: true
              mountPath: /policies

      volumes:
        - name: tls
          emptyDir: {}
        - name: inject-policy
          configMap:
            name: {{ include "opa-sidecar-admission-controller.fullname" . }}-inject-template
{{- end }}
